{"version":3,"file":"static/js/801.d78ec4ef.chunk.js","mappings":"oKA0BA,IAvBkB,SAAC,GAAsB,IAApBA,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGH,GAAqC,KAArB,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQI,QAAQC,SACzB,wBAAI,+BADL,OAGCL,QAHD,IAGCA,OAHD,EAGCA,EAAQI,QAAQE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OAClB,yBACE,SAAC,KAAD,CACEC,GAAa,SAATT,EAAA,iBAA4BM,GAA5B,UAAsCA,GAC1CI,MAAO,CAAEC,KAAMV,GAFjB,SAIGM,GAASC,KALLF,EADS,KAa3B,C,yHCtBYM,EAAQC,EAAAA,GAAAA,MAAH,iVAkBLC,EAAaD,EAAAA,GAAAA,KAAH,8KAUVE,EAAMF,EAAAA,GAAAA,OAAH,orC,SCLhB,EArBa,SAAC,GAAkB,IAAhBG,EAAe,EAAfA,SACd,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAOA,OACE,UAACL,EAAD,CAAYM,SANO,SAAAC,GACnBA,EAAEC,iBACFN,EAASE,EACV,EAGC,WACE,SAACN,EAAD,CACEW,KAAK,OACLL,MAAOA,EACPF,SAAU,SAAAK,GAAC,OAAIF,EAASE,EAAEG,OAAON,MAAtB,EACXO,UAAQ,KAEV,SAACV,EAAD,CAAKQ,KAAK,SAAV,SAAmB,aAGxB,E,SCjBD,IA8BA,EA9Be,WAAO,IAAD,EACnB,GAAkCN,EAAAA,EAAAA,UAAS,MAA3C,eAAOS,EAAP,KAAkBC,EAAlB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAY,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAkBlD,OAXAC,EAAAA,EAAAA,YAAU,WCjBL,IAA+BlC,EDkB7BgC,IClB6BhC,EDsBZgC,ECZjBG,MAAM,mDAAD,OACyCnC,EADzC,8CATI,CACdoC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAOJC,MAAK,SAAAC,GACL,OAAIA,EAAIC,GACCD,EAAIE,OAGN,IAAIC,MAAM,uBAClB,KDIIJ,MAAK,SAAAK,GAAQ,OAAIjB,EAAaiB,EAAjB,IACbC,MAAMC,QAAQC,MAElB,GAAE,CAAChB,KAGF,iCACE,SAAC,EAAD,CAAMf,SAlBgB,SAAAgC,GAExBlB,EAD6B,KAAVkB,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEhD,KAgBG,SAACC,EAAA,EAAD,CAAWlD,OAAQ2B,MAGxB,C","sources":["components/MovieList/MovieList.jsx","components/Form/Form.styled.js","components/Form/Form.jsx","pages/Movies/Movies.jsx","servise/fetchMoviesFromSearch.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movies, page }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies && movies?.results.length === 0 ? (\n        <h2>Sorry, no films were found</h2>\n      ) : (\n        movies?.results.map(({ id, title, name }) => (\n          <li key={id}>\n            <Link\n              to={page === 'home' ? `movies/${id}` : `${id}`}\n              state={{ from: location }}\n            >\n              {title || name}\n            </Link>\n          </li>\n        ))\n      )}\n    </ul>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.object,\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  margin: 40px 15px 40px 30px;\n  background-color: rgb(232, 220, 220);\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding: 5px;\n  outline: 1px rgb(174, 174, 174) solid;\n  border-radius: 3px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const StyledForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const Btn = styled.button`\n  align-items: center;\n  background-color: rgb(217, 167, 167);\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 0.25rem;\n  box-shadow: rgba(0, 0, 0, 0.02) 0 1px 3px 0;\n  box-sizing: border-box;\n  color: rgba(0, 0, 0, 0.85);\n  cursor: pointer;\n  display: inline-flex;\n  font-family: system-ui, -apple-system, system-ui, 'Helvetica Neue', Helvetica,\n    Arial, sans-serif;\n  font-size: 16px;\n  font-weight: 600;\n  justify-content: center;\n  line-height: 1.25;\n  margin: 0;\n  padding: calc(0.875rem - 1px) calc(1.5rem - 1px);\n  position: relative;\n  text-decoration: none;\n  transition: all 250ms;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  vertical-align: baseline;\n  width: auto;\n  height: 38px;\n\n  &:hover,\n  &:focus {\n    border-color: rgba(0, 0, 0, 0.15);\n    box-shadow: rgba(0, 0, 0, 0.1) 0 4px 12px;\n    color: rgba(0, 0, 0, 0.65);\n  }\n\n  &:hover {\n    transform: translateY(-1px);\n  }\n\n  &:active {\n    background-color: #f0f0f1;\n    border-color: rgba(0, 0, 0, 0.15);\n    box-shadow: rgba(0, 0, 0, 0.06) 0 2px 4px;\n    color: rgba(0, 0, 0, 0.65);\n    transform: translateY(0);\n  }\n`;\n","import React, { useState } from 'react';\n// import PropTypes from 'prop-types';\nimport { Input, StyledForm, Btn } from './Form.styled';\n\nconst Form = ({ onChange }) => {\n  const [value, setValue] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onChange(value);\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={e => setValue(e.target.value)}\n        required\n      />\n      <Btn type=\"submit\">Search</Btn>\n    </StyledForm>\n  );\n};\n\nexport default Form;\n\n// Form.propTypes = {\n// onSubmit: PropTypes.func.isRequired,\n// };\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Form from '../../components/Form/Form';\nimport MovieList from '../../components/MovieList/MovieList';\nimport { fetchMoviesFromSearch } from 'servise/fetchMoviesFromSearch';\n\nconst Movies = () => {\n  const [movieInfo, setMovieInfo] = useState(null);\n  // const [searchText, setSearchText] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieFromURL = searchParams.get('movie') ?? '';\n\n  const updateQueryString = movie => {\n    const nextParams = movie !== '' ? { movie } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    if (!movieFromURL) {\n      return;\n    }\n\n    fetchMoviesFromSearch(movieFromURL)\n      .then(response => setMovieInfo(response))\n      .catch(console.error);\n    //  .finally(() => setSubmitClicked(false));\n  }, [movieFromURL]);\n\n  return (\n    <>\n      <Form onChange={updateQueryString} />\n      <MovieList movies={movieInfo} />\n    </>\n  );\n};\n\nexport default Movies;\n","export function fetchMoviesFromSearch(movies) {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmYjY5MWY1OTNlYjc0MjU5MmFkMDFlNmZiNjBhMDE5YiIsInN1YiI6IjY0YTY4YTUxNzI0ZGUxMDBjNWU5ODNiYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.tqT4KdHOxcFDAo6pMr4lLuCDSt37dEUmae-2jFbOSdU',\n    },\n  };\n\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?query=${movies}&include_adult=false&language=en-US&page=1`,\n    options\n  ).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return new Error('Something goes wrong');\n  });\n}\n"],"names":["movies","page","location","useLocation","results","length","map","id","title","name","to","state","from","Input","styled","StyledForm","Btn","onChange","useState","value","setValue","onSubmit","e","preventDefault","type","target","required","movieInfo","setMovieInfo","useSearchParams","searchParams","setSearchParams","movieFromURL","get","useEffect","fetch","method","headers","accept","Authorization","then","res","ok","json","Error","response","catch","console","error","movie","MovieList"],"sourceRoot":""}