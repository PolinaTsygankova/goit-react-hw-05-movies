{"version":3,"file":"static/js/286.fc496109.chunk.js","mappings":"yOAEaA,EAAQC,EAAAA,GAAAA,MAAH,iVAkBLC,EAAaD,EAAAA,GAAAA,KAAH,8KAUVE,EAAMF,EAAAA,GAAAA,OAAH,orC,SCThB,EAjBa,SAAC,GAAyB,IAAvBG,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SASrB,OACE,UAACH,EAAD,CAAYI,SALO,SAAAC,GACnBA,EAAEC,gBACH,EAGC,WACE,SAACR,EAAD,CAAOS,KAAK,OAAOC,MAAON,EAAOC,SAVX,SAAAE,GACxBF,EAASE,EAAEI,OAAOD,MACnB,KASG,SAACP,EAAD,CAAKM,KAAK,SAAV,SAAmB,aAGxB,E,SCsBD,EArCkB,SAAC,GAAgB,IAAdG,EAAa,EAAbA,OACnB,GAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MAqBjB,OAnBAC,EAAAA,EAAAA,YAAU,WAURC,MAAM,mDAAD,OACgDP,EADhD,8CATW,CACdQ,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAQHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAC,GAAQ,OAAIV,EAAaU,EAAjB,IACbE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GACb,GAAE,CAAChB,KAGF,wBACGE,GACCA,EAAUiB,QAAQC,KAAI,SAAAC,GAAI,OACxB,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAKE,IAAMC,MAAO,CAAEC,KAAMrB,GAAvC,SACGiB,EAAKK,SAFDL,EAAKE,GADU,KASjC,ECjBD,EAjBe,WAAO,IAAD,EACnB,GAAwCI,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAY,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAOlD,OACE,iCACE,SAAC,EAAD,CAAMvC,MAAOsC,EAAcrC,SAPL,SAAAD,GAExBqC,EAD6B,KAAVrC,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEhD,KAKG,SAAC,EAAD,CAAWQ,OAAQ8B,MAGxB,C","sources":["components/Form/Form.styled.js","components/Form/Form.jsx","components/MovieList/MovieList.jsx","components/pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Input = styled.input`\n  margin: 40px 15px 40px 30px;\n  background-color: rgb(232, 220, 220);\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding: 5px;\n  outline: 1px rgb(174, 174, 174) solid;\n  border-radius: 3px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const StyledForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const Btn = styled.button`\n  align-items: center;\n  background-color: rgb(217, 167, 167);\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 0.25rem;\n  box-shadow: rgba(0, 0, 0, 0.02) 0 1px 3px 0;\n  box-sizing: border-box;\n  color: rgba(0, 0, 0, 0.85);\n  cursor: pointer;\n  display: inline-flex;\n  font-family: system-ui, -apple-system, system-ui, 'Helvetica Neue', Helvetica,\n    Arial, sans-serif;\n  font-size: 16px;\n  font-weight: 600;\n  justify-content: center;\n  line-height: 1.25;\n  margin: 0;\n  padding: calc(0.875rem - 1px) calc(1.5rem - 1px);\n  position: relative;\n  text-decoration: none;\n  transition: all 250ms;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  vertical-align: baseline;\n  width: auto;\n  height: 38px;\n\n  &:hover,\n  &:focus {\n    border-color: rgba(0, 0, 0, 0.15);\n    box-shadow: rgba(0, 0, 0, 0.1) 0 4px 12px;\n    color: rgba(0, 0, 0, 0.65);\n  }\n\n  &:hover {\n    transform: translateY(-1px);\n  }\n\n  &:active {\n    background-color: #f0f0f1;\n    border-color: rgba(0, 0, 0, 0.15);\n    box-shadow: rgba(0, 0, 0, 0.06) 0 2px 4px;\n    color: rgba(0, 0, 0, 0.65);\n    transform: translateY(0);\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input, StyledForm, Btn } from './Form.styled';\n\nconst Form = ({ movie, onChange }) => {\n  const handleInputChange = e => {\n    onChange(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <Input type=\"text\" value={movie} onChange={handleInputChange} />\n      <Btn type=\"submit\">Search</Btn>\n    </StyledForm>\n  );\n};\n\nexport default Form;\n\nForm.propTypes = {\n  movie: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movies }) => {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmYjY5MWY1OTNlYjc0MjU5MmFkMDFlNmZiNjBhMDE5YiIsInN1YiI6IjY0YTY4YTUxNzI0ZGUxMDBjNWU5ODNiYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.tqT4KdHOxcFDAo6pMr4lLuCDSt37dEUmae-2jFbOSdU',\n      },\n    };\n\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?query=${movies}&include_adult=false&language=en-US&page=1`,\n      options\n    )\n      .then(response => response.json())\n      .then(response => setMovieInfo(response))\n      .catch(err => console.error(err));\n  }, [movies]);\n\n  return (\n    <ul>\n      {movieInfo &&\n        movieInfo.results.map(item => (\n          <li key={item.id}>\n            <Link to={`${item.id}`} state={{ from: location }}>\n              {item.title}\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.string.isRequired,\n};\n","import { useSearchParams } from 'react-router-dom';\nimport React from 'react';\nimport Form from './../../Form/Form';\nimport MovieList from './../../MovieList/MovieList';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieFromURL = searchParams.get('movie') ?? '';\n\n  const updateQueryString = movie => {\n    const nextParams = movie !== '' ? { movie } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <>\n      <Form movie={movieFromURL} onChange={updateQueryString} />\n      <MovieList movies={movieFromURL} />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["Input","styled","StyledForm","Btn","movie","onChange","onSubmit","e","preventDefault","type","value","target","movies","useState","movieInfo","setMovieInfo","location","useLocation","useEffect","fetch","method","headers","accept","Authorization","then","response","json","catch","err","console","error","results","map","item","to","id","state","from","title","useSearchParams","searchParams","setSearchParams","movieFromURL","get"],"sourceRoot":""}