{"version":3,"file":"static/js/115.fd07b4d4.chunk.js","mappings":"qOAGaA,GAAYC,E,OAAAA,IAAOC,EAAAA,GAAPD,CAAH,gK,SCsEtB,EArEqB,WAAO,IAAD,IACzB,GAAgCE,EAAAA,EAAAA,UAAS,MAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,GAASC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,MAqBjB,IAnBAC,EAAAA,EAAAA,YAAU,WAURC,MAAM,sCAAD,OACmCL,EAAOM,QAD1C,mBATW,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAQHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAC,GAAQ,OAAIb,EAAYa,EAAhB,IACbE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GACb,GAAE,CAACf,EAAOM,UAENR,GAAyB,OAAbA,EAAjB,CAIA,IAAQoB,EAA6DpB,EAA7DoB,MAAOC,EAAsDrB,EAAtDqB,KAAMC,EAAgDtB,EAAhDsB,aAAcC,EAAkCvB,EAAlCuB,YAAaC,EAAqBxB,EAArBwB,SAAUC,EAAWzB,EAAXyB,OAU1D,OACE,8BACGzB,IACC,4BACE,SAACJ,EAAD,CAAW8B,GAAE,oBAAEtB,EAASuB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAvC,SAA4C,qBAC5C,0BAAKR,GAASC,EAAK,QACnB,yBAAG,eAAaC,GAAgBO,KAAKC,MAAMR,GAAc,QACzD,gBACES,IAAG,yCAAoCR,GACvCS,IAAKZ,GAASC,KAEhB,wBAAI,cACJ,uBAAIG,KACJ,wBAAI,YACJ,uBAtBR,WACE,GAAIC,EACF,OAAOQ,OAAOC,OAAOT,GAClBU,KAAI,SAAAC,GAAI,OAAIA,EAAKf,IAAT,IACRgB,KAAK,KAEX,CAgBWC,MACJ,uBAAG,4BACH,2BACE,yBACE,SAAC,KAAD,CAAMZ,GAAG,OAAT,SAAgB,YAElB,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,kBAGvB,SAAC,KAAD,QApCP,CAyCF,C","sources":["components/pages/MovieDetails/MovieDetails.styled.js","components/pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const GoBackBtn = styled(NavLink)`\n  margin-left: 10px;\n  text-decoration: none;\n  border-radius: 7px;\n  color: black;\n  padding: 10px;\n  background-color: #ffcccc;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { GoBackBtn } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [filmInfo, setFilmInfo] = useState(null);\n  const params = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmYjY5MWY1OTNlYjc0MjU5MmFkMDFlNmZiNjBhMDE5YiIsInN1YiI6IjY0YTY4YTUxNzI0ZGUxMDBjNWU5ODNiYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.tqT4KdHOxcFDAo6pMr4lLuCDSt37dEUmae-2jFbOSdU',\n      },\n    };\n\n    fetch(\n      `https://api.themoviedb.org/3/movie/${params.movieId}?language=en-US`,\n      options\n    )\n      .then(response => response.json())\n      .then(response => setFilmInfo(response))\n      .catch(err => console.error(err));\n  }, [params.movieId]);\n\n  if (!filmInfo || filmInfo === null) {\n    return;\n  }\n\n  const { title, name, vote_average, poster_path, overview, genres } = filmInfo;\n\n  function getGenres() {\n    if (genres) {\n      return Object.values(genres)\n        .map(genr => genr.name)\n        .join(', ');\n    }\n  }\n\n  return (\n    <>\n      {filmInfo && (\n        <div>\n          <GoBackBtn to={location.state?.from ?? '/'}> â¬… Go back</GoBackBtn>\n          <h1>{title || name} </h1>\n          <p>User Score: {vote_average && Math.round(vote_average)} </p>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n            alt={title || name}\n          />\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{getGenres()}</p>\n          <p>Additional information</p>\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n          <Outlet />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["GoBackBtn","styled","NavLink","useState","filmInfo","setFilmInfo","params","useParams","location","useLocation","useEffect","fetch","movieId","method","headers","accept","Authorization","then","response","json","catch","err","console","error","title","name","vote_average","poster_path","overview","genres","to","state","from","Math","round","src","alt","Object","values","map","genr","join","getGenres"],"sourceRoot":""}