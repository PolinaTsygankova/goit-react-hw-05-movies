{"version":3,"file":"static/js/422.9c560044.chunk.js","mappings":"oKA0BA,IAvBkB,SAAC,GAAsB,IAApBA,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGH,GAAqC,KAArB,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQI,QAAQC,SACzB,wBAAI,+BADL,OAGCL,QAHD,IAGCA,OAHD,EAGCA,EAAQI,QAAQE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OAClB,yBACE,SAAC,KAAD,CACEC,GAAa,SAATT,EAAA,iBAA4BM,GAA5B,UAAsCA,GAC1CI,MAAO,CAAEC,KAAMV,GAFjB,SAIGM,GAASC,KALLF,EADS,KAa3B,C,+GCHD,EAjBa,WACX,OAA0BM,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAQA,OANAC,EAAAA,EAAAA,YAAU,WCGHC,MACL,+DAVc,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAOJC,MAAK,SAAAC,GACL,OAAIA,EAAIC,GACCD,EAAIE,OAGN,IAAIC,MAAM,uBAClB,IDVIJ,MAAK,SAAAK,GAAQ,OAAIZ,EAASY,EAAb,IACbC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GACb,GAAE,KAGD,iCACE,wBAAI,UACJ,SAACG,EAAA,EAAD,CAAWhC,OAAQc,EAAOb,KAAM,WAGrC,C","sources":["components/MovieList/MovieList.jsx","pages/Home/Home.jsx","servise/fetchMovieListForHomepage.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movies, page }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies && movies?.results.length === 0 ? (\n        <h2>Sorry, no films were found</h2>\n      ) : (\n        movies?.results.map(({ id, title, name }) => (\n          <li key={id}>\n            <Link\n              to={page === 'home' ? `movies/${id}` : `${id}`}\n              state={{ from: location }}\n            >\n              {title || name}\n            </Link>\n          </li>\n        ))\n      )}\n    </ul>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.object,\n};\n","import { useState, useEffect } from 'react';\nimport { fetchMovieListForHomepage } from 'servise/fetchMovieListForHomepage';\nimport MovieList from './../../components/MovieList/MovieList';\n\nconst Home = () => {\n  const [films, setFilms] = useState(null);\n\n  useEffect(() => {\n    fetchMovieListForHomepage()\n      .then(response => setFilms(response))\n      .catch(err => console.error(err));\n  }, []);\n\n  return (\n    <>\n      <h1>Home</h1>\n      <MovieList movies={films} page={'home'} />\n    </>\n  );\n};\n\nexport default Home;\n","export function fetchMovieListForHomepage() {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmYjY5MWY1OTNlYjc0MjU5MmFkMDFlNmZiNjBhMDE5YiIsInN1YiI6IjY0YTY4YTUxNzI0ZGUxMDBjNWU5ODNiYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.tqT4KdHOxcFDAo6pMr4lLuCDSt37dEUmae-2jFbOSdU',\n    },\n  };\n\n  return fetch(\n    'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n    options\n  ).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return new Error('Something goes wrong');\n  });\n}\n"],"names":["movies","page","location","useLocation","results","length","map","id","title","name","to","state","from","useState","films","setFilms","useEffect","fetch","method","headers","accept","Authorization","then","res","ok","json","Error","response","catch","err","console","error","MovieList"],"sourceRoot":""}