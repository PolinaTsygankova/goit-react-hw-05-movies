{"version":3,"file":"static/js/412.028fa580.chunk.js","mappings":"iOAEaA,EAAQC,EAAAA,GAAAA,MAAH,iVAkBLC,EAAaD,EAAAA,GAAAA,KAAH,8KAUVE,EAAMF,EAAAA,GAAAA,OAAH,orC,SCNhB,EApBa,SAAC,GAAkB,IAAhBG,EAAe,EAAfA,SACd,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAWA,OACE,UAACL,EAAD,CAAYM,SANO,SAAAC,GACnBA,EAAEC,iBACFN,EAASE,EACV,EAGC,WACE,SAACN,EAAD,CAAOW,KAAK,OAAOL,MAAOA,EAAOF,SAXX,SAAAK,GACxBF,EAASE,EAAEG,OAAON,MACnB,KAUG,SAACH,EAAD,CAAKQ,KAAK,SAAV,SAAmB,aAGxB,E,iBCCD,EApBkB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBAC8B,KAArB,OAANF,QAAM,IAANA,OAAA,EAAAA,EAAQG,QAAQC,SACf,wBAAI,+BADL,OAGCJ,QAHD,IAGCA,OAHD,EAGCA,EAAQG,QAAQE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OAClB,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMT,GAAlC,SACGM,KAFID,EADS,KAU3B,EChBD,IAwBA,EAxBe,WACb,OAAkCd,EAAAA,EAAAA,UAAS,MAA3C,eAAOmB,EAAP,KAAkBC,EAAlB,KACA,GAAoCpB,EAAAA,EAAAA,UAAS,IAA7C,eAAOqB,EAAP,KAAmBC,EAAnB,KAcA,OARAC,EAAAA,EAAAA,YAAU,WCbL,IAA+Bf,EDc9Ba,ICd8Bb,EDeVa,ECLnBG,MAAM,mDAAD,OACyChB,EADzC,8CATI,CACdiB,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAOJC,MAAK,SAAAC,GACL,GAAIA,EAAIC,GACN,OAAOD,EAAIE,MAEd,KDDMH,MAAK,SAAAI,GAAQ,OAAIb,EAAaa,EAAjB,IACbC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GAEf,GAAE,CAACd,KAGF,iCACE,SAAC,EAAD,CAAMtB,SAde,SAAAuC,GACvBhB,EAAcgB,EACf,KAaG,SAAC,EAAD,CAAW9B,OAAQW,MAGxB,C","sources":["components/Form/Form.styled.js","components/Form/Form.jsx","components/MovieList/MovieList.jsx","pages/Movies/Movies.jsx","servise/fetchMoviesFromSearch.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Input = styled.input`\n  margin: 40px 15px 40px 30px;\n  background-color: rgb(232, 220, 220);\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding: 5px;\n  outline: 1px rgb(174, 174, 174) solid;\n  border-radius: 3px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const StyledForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const Btn = styled.button`\n  align-items: center;\n  background-color: rgb(217, 167, 167);\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 0.25rem;\n  box-shadow: rgba(0, 0, 0, 0.02) 0 1px 3px 0;\n  box-sizing: border-box;\n  color: rgba(0, 0, 0, 0.85);\n  cursor: pointer;\n  display: inline-flex;\n  font-family: system-ui, -apple-system, system-ui, 'Helvetica Neue', Helvetica,\n    Arial, sans-serif;\n  font-size: 16px;\n  font-weight: 600;\n  justify-content: center;\n  line-height: 1.25;\n  margin: 0;\n  padding: calc(0.875rem - 1px) calc(1.5rem - 1px);\n  position: relative;\n  text-decoration: none;\n  transition: all 250ms;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  vertical-align: baseline;\n  width: auto;\n  height: 38px;\n\n  &:hover,\n  &:focus {\n    border-color: rgba(0, 0, 0, 0.15);\n    box-shadow: rgba(0, 0, 0, 0.1) 0 4px 12px;\n    color: rgba(0, 0, 0, 0.65);\n  }\n\n  &:hover {\n    transform: translateY(-1px);\n  }\n\n  &:active {\n    background-color: #f0f0f1;\n    border-color: rgba(0, 0, 0, 0.15);\n    box-shadow: rgba(0, 0, 0, 0.06) 0 2px 4px;\n    color: rgba(0, 0, 0, 0.65);\n    transform: translateY(0);\n  }\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input, StyledForm, Btn } from './Form.styled';\n\nconst Form = ({ onChange }) => {\n  const [value, setValue] = useState('');\n\n  const handleInputChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onChange(value);\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <Input type=\"text\" value={value} onChange={handleInputChange} />\n      <Btn type=\"submit\">Search</Btn>\n    </StyledForm>\n  );\n};\n\nexport default Form;\n\nForm.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies?.results.length === 0 ? (\n        <h2>Sorry, no films were found</h2>\n      ) : (\n        movies?.results.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={`${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        ))\n      )}\n    </ul>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.object.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport Form from '../../components/Form/Form';\nimport MovieList from '../../components/MovieList/MovieList';\nimport { fetchMoviesFromSearch } from 'servise/fetchMoviesFromSearch';\n\nconst Movies = () => {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [searchText, setSearchText] = useState('');\n\n  const handleFormSubmit = movie => {\n    setSearchText(movie);\n  };\n\n  useEffect(() => {\n    if (searchText) {\n      fetchMoviesFromSearch(searchText)\n        .then(response => setMovieInfo(response))\n        .catch(err => console.error(err));\n    }\n  }, [searchText]);\n\n  return (\n    <>\n      <Form onChange={handleFormSubmit} />\n      <MovieList movies={movieInfo} />\n    </>\n  );\n};\n\nexport default Movies;\n","export function fetchMoviesFromSearch(movies) {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmYjY5MWY1OTNlYjc0MjU5MmFkMDFlNmZiNjBhMDE5YiIsInN1YiI6IjY0YTY4YTUxNzI0ZGUxMDBjNWU5ODNiYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.tqT4KdHOxcFDAo6pMr4lLuCDSt37dEUmae-2jFbOSdU',\n    },\n  };\n\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?query=${movies}&include_adult=false&language=en-US&page=1`,\n    options\n  ).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n  });\n}\n"],"names":["Input","styled","StyledForm","Btn","onChange","useState","value","setValue","onSubmit","e","preventDefault","type","target","movies","location","useLocation","results","length","map","id","title","to","state","from","movieInfo","setMovieInfo","searchText","setSearchText","useEffect","fetch","method","headers","accept","Authorization","then","res","ok","json","response","catch","err","console","error","movie"],"sourceRoot":""}